1- Query: Create 3 new dojos

      -USE dojos_and_ninjas;
      - SHOW tables;
      - INSERT INTO dojos (name)
      - VALUES ("dojo1"), ("dojo2"),("dojo3");
      
2- Query: Delete the 3 dojos you just created
      SET SQL_SAFE_UPDATES = 0;
      DELETE FROM dojos;

3-  Create 3 more dojos 
    INSERT INTO dojos (name)
      - VALUES ("dojo4"), ("dojo5"),("dojo6");

4- Create 3 ninjas that belong to the first dojo
    INSERT INTO ninjas (first_name,last_name,age,dojo_id)
    VALUES ("Adrien","Dion",39,4),
            ("Anne","Jurack",34,4),
            ("Ryan","Magley",30,4);

5- Create 3 ninjas that belong to the second dojo
    NSERT INTO ninjas (first_name,last_name,age,dojo_id)
    VALUES  ("Marisa","Goode",37,5),
            ("Todd","Enders",36,5),
            ("Sadie","Flick",29,5);

6- Create 3 ninjas that belong to the third dojo
    INSERT INTO ninjas (first_name,last_name,age,dojo_id)
    VALUES ("Mr. Nibbles","Pancakes",54,6),
            ("Benny Bob","McBob",65,6),
            ("Mitch","Golden",26,6);
7- Retrieve all the ninjas from the first dojo

    SELECT * FROM dojos
    LEFT JOIN ninjas ON dojos.id = ninjas.dojo_id
    WHERE dojos.id = 4;

     
   SELECT * FROM ninjas WHERE dojo_id = 1;

8-  Retrieve all the ninjas from the last  dojo
    SELECT * FROM dojos
    LEFT JOIN ninjas ON dojos.id = ninjas.dojo_id
    WHERE dojos.id = 6;


9- Retrieve the last ninjaâ€™s dojo
    SELECT * FROM dojos
    LEFT JOIN ninjas ON dojos.id = ninjas.dojo_id
	WHERE dojos.id = (SELECT id FROM dojos ORDER BY id DESC LIMIT 1);
 
10- Use a join to retrieve the ninja with id 6 as well as the data from its dojo. Be sure to do this in one query using a join statement
SELECT * FROM dojos
WHERE dojos.id = (SELECT dojo_id FROM ninjas ORDER BY dojo_id DESC LIMIT 1);



11- Use a JOIN to retrieve all the ninjas as well as that ninja's dojo, note, you will see repeated data on dojos as a dojo can have many ninjas!


   SELECT ninjas.* , dojos.* 
   FROM ninjas J
   JOIN dojos ON ninjas.dojo_id = dojos.id